// <auto-generated />
using System;
using GarageManagerAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GarageManagerAPI.Migrations
{
    [DbContext(typeof(GarageManagerAPI.Context.Modelo))]
    [Migration("20230426012643_MigracaoInicial")]
    partial class MigracaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GarageManagerRazorLib.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("clientes", "oficina");
                });

            modelBuilder.Entity("GarageManagerRazorLib.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("marcas", "oficina");
                });

            modelBuilder.Entity("GarageManagerRazorLib.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdMarca")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarca");

                    b.ToTable("modelos", "oficina");
                });

            modelBuilder.Entity("GarageManagerRazorLib.Models.OrdemServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Esperados")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime?>("Fim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer");

                    b.Property<int>("IdVeiculo")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Inicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("Lavacao")
                        .HasColumnType("boolean");

                    b.Property<string>("Mecanico")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Pagamento")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Realizados")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdVeiculo");

                    b.ToTable("ordem_servico", "oficina");
                });

            modelBuilder.Entity("GarageManagerRazorLib.Models.OrdemServicoPecas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdOrdemServico")
                        .HasColumnType("integer");

                    b.Property<int>("IdPeca")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdOrdemServico");

                    b.HasIndex("IdPeca");

                    b.ToTable("ordens_pecas", "oficina");
                });

            modelBuilder.Entity("GarageManagerRazorLib.Models.Peca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Marca")
                        .HasColumnType("text");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("pecas", "oficina");
                });

            modelBuilder.Entity("GarageManagerRazorLib.Models.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Ano")
                        .HasColumnType("integer");

                    b.Property<string>("Cor")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int>("IdModelo")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Km")
                        .HasColumnType("numeric");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.HasKey("Id");

                    b.HasIndex("IdModelo");

                    b.ToTable("veiculos", "oficina");
                });

            modelBuilder.Entity("GarageManagerRazorLib.Models.Modelo", b =>
                {
                    b.HasOne("GarageManagerRazorLib.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("GarageManagerRazorLib.Models.OrdemServico", b =>
                {
                    b.HasOne("GarageManagerRazorLib.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GarageManagerRazorLib.Models.Veiculo", "Veiculo")
                        .WithMany()
                        .HasForeignKey("IdVeiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("GarageManagerRazorLib.Models.OrdemServicoPecas", b =>
                {
                    b.HasOne("GarageManagerRazorLib.Models.OrdemServico", "OrdemServico")
                        .WithMany()
                        .HasForeignKey("IdOrdemServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GarageManagerRazorLib.Models.Peca", "Peca")
                        .WithMany()
                        .HasForeignKey("IdPeca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrdemServico");

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("GarageManagerRazorLib.Models.Veiculo", b =>
                {
                    b.HasOne("GarageManagerRazorLib.Models.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("IdModelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modelo");
                });
#pragma warning restore 612, 618
        }
    }
}
